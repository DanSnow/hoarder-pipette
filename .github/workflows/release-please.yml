on:
  push:
    branches:
      - main

permissions:
  id-token: write
  attestations: write
  contents: write
  pull-requests: write

name: release

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.release.outputs.tag_name }}
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          # this assumes that you have created a personal access token
          # (PAT) and configured it as a GitHub action secret named
          # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).
          token: ${{ secrets.GITHUB_TOKEN }}
  build-extension:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.release-please.outputs.tag_name }}
          fetch-depth: 0
      - uses: moonrepo/setup-toolchain@v0
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: "22.16.0"
          cache: "pnpm"
      - run: pnpm install
      - run: pnpm build
      - name: Attest
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: |
            ./dist/chrome/hoarders-pipette-*.zip
            ./dist/firefox/hoarders-pipette-*.xpi
      - run: gh release upload ${{ needs.release-please.outputs.tag_name }} ./dist/chrome/hoarders-pipette-*.zip ./dist/firefox/hoarders-pipette-*.xpi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
